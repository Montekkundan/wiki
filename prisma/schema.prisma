datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}
model Document {
  id              String    @id @default(uuid())
  title           String
  userId          String
  isArchived      Boolean
  parentDocumentId String?   // Foreign key for the relation
  content         String?
  coverImage      String?
  icon            String?
  isPublished     Boolean

  // Self-relation
  parentDocument  Document?  @relation("ParentToChild", fields: [parentDocumentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childDocuments  Document[] @relation("ParentToChild")

  @@index([userId])
  @@index([userId, parentDocumentId])
  @@index([parentDocumentId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                String         @id @default(cuid())
  name              String?
  email             String?        @unique
  emailVerified     DateTime?

  username String? @unique

  image       String?  @db.MediumText
  accounts    Account[]
  sessions    Session[]
 
}